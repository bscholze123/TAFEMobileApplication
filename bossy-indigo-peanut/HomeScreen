import React, { useState } from 'react';
import { View, Text, FlatList, TouchableOpacity, Modal, Button, TextInput } from 'react-native';
import { useNavigation } from '@react-navigation/native';
import UpdateProfileScreen from './UpdateProfileScreen';
import UpdateStaffScreen from './UpdateStaffScreen';

const HomeScreen = () => {
  const navigation = useNavigation();

  const [contacts, setContacts] = useState([
    { id: '1', name: 'John Doe', position: 'Developer', phone: '1234567890', email: 'john@example.com' },
    { id: '2', name: 'Jane Smith', position: 'Designer', phone: '9876543210', email: 'jane@example.com' },
    // Add more staff contacts as needed
  ]);

  const [userProfile, setUserProfile] = useState({
    id: '1',
    name: 'John Doe',
    position: 'Developer',
    phone: '1234567890',
    email: 'john@example.com',
  });

  const [modalVisible, setModalVisible] = useState(false);
  const [newContact, setNewContact] = useState({ name: '', position: '', phone: '', email: '' });

  const renderContactItem = ({ item }) => (
    <TouchableOpacity onPress={() => updateContact(item)}>
      <View style={{ marginVertical: 10 }}>
        <Text>{`${item.name} - ${item.position}`}</Text>
        <Text>{`Phone: ${item.phone}, Email: ${item.email}`}</Text>
      </View>
    </TouchableOpacity>
  );

  const updateContact = (selectedContact) => {
    navigation.navigate('UpdateStaff', {
      contact: selectedContact,
      updateContactDetails: handleUpdateContactDetails,
    });
  };

  const handleEditProfile = () => {
    setModalVisible(true);
  };

  const handleUpdateProfile = () => {
    setModalVisible(false);
  };

  const handleAddContact = () => {
    setContacts((prevContacts) => [
      ...prevContacts,
      { id: `${contacts.length + 1}`, ...newContact },
    ]);
    setNewContact({ name: '', position: '', phone: '', email: '' });
  };

  const handleUpdateContactDetails = (updatedContact) => {
    setContacts((prevContacts) =>
      prevContacts.map((contact) => (contact.id === updatedContact.id ? updatedContact : contact))
    );
  };

  return (
    <View>
      <Text style={{ fontSize: 20, fontWeight: 'bold', marginBottom: 20 }}>
        Staff Contact Application
      </Text>

      {/* User Profile Section */}
      <View style={{ marginBottom: 20 }}>
        <Text style={{ fontSize: 16, fontWeight: 'bold', marginBottom: 10 }}>
          My Profile
        </Text>
        <Text>{`Name: ${userProfile.name}`}</Text>
        <Text>{`Position: ${userProfile.position}`}</Text>
        <Text>{`Phone: ${userProfile.phone}`}</Text>
        <Text>{`Email: ${userProfile.email}`}</Text>
        <Button title="Edit Profile" onPress={handleEditProfile} />
      </View>

      {/* Staff Contacts Section */}
      <Text style={{ fontSize: 16, fontWeight: 'bold', marginTop: 20, marginBottom: 10 }}>
        Staff Contacts
      </Text>
      <FlatList data={contacts} renderItem={renderContactItem} keyExtractor={(item) => item.id} />

      {/* Modal for Updating Contacts */}
      <Modal animationType="slide" transparent={false} visible={modalVisible}>
        <UpdateProfileScreen
          userProfile={userProfile}
          updateUserProfile={setUserProfile}
          handleUpdateProfile={handleUpdateProfile}
        />
      </Modal>

      {/* Add Staff Contact Section */}
      <View style={{ marginTop: 20 }}>
        <Text style={{ fontSize: 16, fontWeight: 'bold', marginBottom: 10 }}>
          Add Staff
        </Text>
        <TextInput
          style={{ height: 40, borderColor: 'gray', borderWidth: 1, marginBottom: 10 }}
          placeholder="Name"
          value={newContact.name}
          onChangeText={(text) => setNewContact({ ...newContact, name: text })}
        />
        <TextInput
          style={{ height: 40, borderColor: 'gray', borderWidth: 1, marginBottom: 10 }}
          placeholder="Position"
          value={newContact.position}
          onChangeText={(text) => setNewContact({ ...newContact, position: text })}
        />
        <TextInput
          style={{ height: 40, borderColor: 'gray', borderWidth: 1, marginBottom: 10 }}
          placeholder="Phone"
          value={newContact.phone}
          onChangeText={(text) => setNewContact({ ...newContact, phone: text })}
        />
        <TextInput
          style={{ height: 40, borderColor: 'gray', borderWidth: 1, marginBottom: 10 }}
          placeholder="Email"
          value={newContact.email}
          onChangeText={(text) => setNewContact({ ...newContact, email: text })}
        />
        <Button title="Add Staff" onPress={handleAddContact} />
      </View>
    </View>
  );
};

export default HomeScreen;